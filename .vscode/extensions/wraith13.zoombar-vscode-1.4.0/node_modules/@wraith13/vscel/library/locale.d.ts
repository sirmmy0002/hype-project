export interface LocaleEntry {
    [key: string]: string;
}
export declare const make: <LocaleEntryType extends LocaleEntry>(basicLocale: LocaleEntryType, locales: {
    [language: string]: LocaleEntryType;
}) => Locale<LocaleEntryType>;
export declare class Locale<LocaleEntryType extends LocaleEntry> {
    private basicLocale;
    private locales;
    constructor(basicLocale: LocaleEntryType, locales: {
        [language: string]: LocaleEntryType;
    });
    localeTableKey: string;
    localeTable: any;
    isTypealbeLocale: boolean;
    string: (key: string) => string;
    map: (key: keyof LocaleEntryType & string) => string;
    typeableMap: (key: keyof LocaleEntryType & string) => string;
}
